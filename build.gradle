buildscript {
    repositories {
        // For build scan nightlies
        maven { url 'https://repo.gradle.org/gradle/enterprise-libs-snapshots-local' }
    }
    dependencies {
        classpath 'com.gradle:build-scan-plugin:latest.integration'//2.1-20181114170556-master'//
    }
}

plugins {
    id 'java'
}

apply plugin: 'com.gradle.build-scan'
buildScan {
    publishAlways()
    server = 'https://ge-experiment.grdev.net'
    capturePerFileTaskInputs = true
}

repositories {
    jcenter()
}

dependencies {
    implementation project(':submodule1')
    implementation 'com.google.guava:guava:23.0'
    
    testImplementation 'junit:junit:4.12'
}

@CacheableTask
class MyCacheableTask extends DefaultTask {
    
    @PathSensitive(PathSensitivity.RELATIVE)
    @InputFile
    File getDate() {
        return project.file("$project.projectDir/date.txt")
    }

    @OutputFile
    File getDateFile() {
        return project.file("$project.buildDir/date/date.txt")
    }

    @TaskAction
    def action() {
        dateFile.write date.text
    }
}

tasks.register("createInput") {
    doLast {
        project.file("$project.projectDir/date.txt").text = new Date().toString()
    }
}

tasks.register("dateTask", MyCacheableTask) {
    dependsOn "createInput"
}

@CacheableTask
class UuidTask extends DefaultTask {
    
    @Input
    String getUuid() {
        return UUID.randomUUID().toString()
    }
    
    @OutputFile
    File getUuidFile() {
        return project.file("$project.buildDir/uuid/uuid.txt")
    }
    
    @TaskAction
    def action() {
        uuidFile.write uuid
    }
}

tasks.register("uuidTask", UuidTask)

subprojects {
    tasks.withType(Jar) {
        manifest.attributes "date": new Date().toString()
    }
}
